{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Injectable, NgZone, EventEmitter, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/script.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nconst _c0 = [\"payPalButtonContainer\"];\n\nlet ScriptService =\n/** @class */\n(() => {\n  class ScriptService {\n    /**\r\n     * @param {?} zone\r\n     */\n    constructor(zone) {\n      this.zone = zone;\n    }\n    /**\r\n     * @param {?} url\r\n     * @param {?} globalVar\r\n     * @param {?} onReady\r\n     * @return {?}\r\n     */\n\n\n    registerScript(url, globalVar, onReady) {\n      /** @type {?} */\n      const existingGlobalVar =\n      /** @type {?} */\n      window[globalVar];\n\n      if (existingGlobalVar) {\n        // global variable is present = script was already loaded\n        this.zone.run(\n        /**\r\n        * @return {?}\r\n        */\n        () => {\n          onReady(existingGlobalVar);\n        });\n        return;\n      } // prepare script elem\n\n      /** @type {?} */\n\n\n      const scriptElem = document.createElement('script');\n      scriptElem.id = this.getElemId(globalVar);\n      scriptElem.innerHTML = '';\n\n      scriptElem.onload =\n      /**\r\n      * @return {?}\r\n      */\n      () => {\n        this.zone.run(\n        /**\r\n        * @return {?}\r\n        */\n        () => {\n          onReady(\n          /** @type {?} */\n          window[globalVar]);\n        });\n      };\n\n      scriptElem.src = url;\n      scriptElem.async = true;\n      scriptElem.defer = true; // add script to header\n\n      document.getElementsByTagName('head')[0].appendChild(scriptElem);\n    }\n    /**\r\n     * @param {?} globalVar\r\n     * @return {?}\r\n     */\n\n\n    cleanup(globalVar) {\n      // remove script from DOM\n\n      /** @type {?} */\n      const scriptElem = document.getElementById(this.getElemId(globalVar));\n\n      if (scriptElem) {\n        scriptElem.remove();\n      }\n    }\n    /**\r\n     * @private\r\n     * @param {?} globalVar\r\n     * @return {?}\r\n     */\n\n\n    getElemId(globalVar) {\n      return `ngx-paypal-script-elem-${globalVar}`;\n    }\n\n  }\n\n  ScriptService.ɵfac = function ScriptService_Factory(t) {\n    return new (t || ScriptService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n\n  ScriptService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ScriptService,\n    factory: function (t) {\n      return ScriptService.ɵfac(t);\n    }\n  });\n  /** @nocollapse */\n\n  ScriptService.ctorParameters = () => [{\n    type: NgZone\n  }];\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScriptService, [{\n      type: Injectable\n    }], function () {\n      return [{\n        type: ɵngcc0.NgZone\n      }];\n    }, null);\n  })();\n\n  return ScriptService;\n})();\n\nif (false) {\n  /**\r\n   * @type {?}\r\n   * @protected\r\n   */\n  ScriptService.prototype.zone;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/paypal-script.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nlet PayPalScriptService =\n/** @class */\n(() => {\n  class PayPalScriptService {\n    /**\r\n     * @param {?} scriptService\r\n     */\n    constructor(scriptService) {\n      this.scriptService = scriptService;\n      this.paypalWindowName = 'paypal';\n    }\n    /**\r\n     * @param {?} config\r\n     * @param {?} onReady\r\n     * @return {?}\r\n     */\n\n\n    registerPayPalScript(config, onReady) {\n      this.scriptService.registerScript(this.getUrlForConfig(config), this.paypalWindowName, onReady);\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    destroyPayPalScript() {\n      this.scriptService.cleanup(this.paypalWindowName);\n    }\n    /**\r\n     * @private\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\n\n\n    getUrlForConfig(config) {\n      /** @type {?} */\n      const params = [{\n        name: 'client-id',\n        value: config.clientId\n      }];\n\n      if (config.currency) {\n        params.push({\n          name: 'currency',\n          value: config.currency\n        });\n      }\n\n      if (config.commit) {\n        params.push({\n          name: 'commit',\n          value: config.commit\n        });\n      }\n\n      if (config.vault) {\n        params.push({\n          name: 'vault',\n          value: config.vault\n        });\n      }\n\n      if (config.extraParams) {\n        params.push(...config.extraParams);\n      }\n\n      return `https://www.paypal.com/sdk/js${this.getQueryString(params)}`;\n    }\n    /**\r\n     * @private\r\n     * @param {?} queryParams\r\n     * @return {?}\r\n     */\n\n\n    getQueryString(queryParams) {\n      /** @type {?} */\n      let queryString = '';\n\n      for (let i = 0; i < queryParams.length; i++) {\n        /** @type {?} */\n        const queryParam = queryParams[i];\n\n        if (i === 0) {\n          queryString += '?';\n        } else {\n          queryString += '&';\n        }\n\n        queryString += `${queryParam.name}=${queryParam.value}`;\n      }\n\n      return queryString;\n    }\n\n  }\n\n  PayPalScriptService.ɵfac = function PayPalScriptService_Factory(t) {\n    return new (t || PayPalScriptService)(ɵngcc0.ɵɵinject(ScriptService));\n  };\n\n  PayPalScriptService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: PayPalScriptService,\n    factory: function (t) {\n      return PayPalScriptService.ɵfac(t);\n    }\n  });\n  /** @nocollapse */\n\n  PayPalScriptService.ctorParameters = () => [{\n    type: ScriptService\n  }];\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PayPalScriptService, [{\n      type: Injectable\n    }], function () {\n      return [{\n        type: ScriptService\n      }];\n    }, null);\n  })();\n\n  return PayPalScriptService;\n})();\n\nif (false) {\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n  PayPalScriptService.prototype.paypalWindowName;\n  /**\r\n   * @type {?}\r\n   * @protected\r\n   */\n\n  PayPalScriptService.prototype.scriptService;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/paypal.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nlet NgxPaypalComponent =\n/** @class */\n(() => {\n  class NgxPaypalComponent {\n    /**\r\n     * @param {?} paypalScriptService\r\n     * @param {?} cdr\r\n     * @param {?} ngZone\r\n     */\n    constructor(paypalScriptService, cdr, ngZone) {\n      this.paypalScriptService = paypalScriptService;\n      this.cdr = cdr;\n      this.ngZone = ngZone;\n      /**\r\n       * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n       * sharing base configuration. In such a case only a single component may register script.\r\n       */\n\n      this.registerScript = true;\n      /**\r\n       * Emitted when paypal script is loaded\r\n       */\n\n      this.scriptLoaded = new EventEmitter();\n      this.ngUnsubscribe = new Subject();\n      /**\r\n       * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n       */\n\n      this.initializePayPal = true;\n    }\n    /**\r\n     * @param {?} content\r\n     * @return {?}\r\n     */\n\n\n    set payPalButtonContainer(content) {\n      this.payPalButtonContainerElem = content;\n    }\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n\n\n    ngOnChanges(changes) {\n      if (!this.payPalButtonContainerId) {\n        this.payPalButtonContainerId = this.generateElementId();\n      } // first time config setup\n\n      /** @type {?} */\n\n\n      const config = this.config;\n\n      if (changes.config.isFirstChange()) {\n        if (config && this.registerScript) {\n          this.initPayPalScript(config,\n          /**\r\n          * @param {?} payPal\r\n          * @return {?}\r\n          */\n          payPal => {\n            // store reference to paypal global script\n            this.payPal = payPal;\n            this.doPayPalCheck();\n          });\n        }\n      } // changes to config\n\n\n      if (!changes.config.isFirstChange()) {\n        this.reinitialize(config);\n      }\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    ngOnDestroy() {\n      this.paypalScriptService.destroyPayPalScript();\n      this.ngUnsubscribe.next();\n      this.ngUnsubscribe.complete();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    ngAfterViewInit() {\n      this.doPayPalCheck();\n    }\n    /**\r\n     * @param {?} payPal\r\n     * @return {?}\r\n     */\n\n\n    customInit(payPal) {\n      this.payPal = payPal;\n      this.doPayPalCheck();\n    }\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\n\n\n    reinitialize(config) {\n      this.config = config;\n      this.payPal = undefined;\n      this.paypalScriptService.destroyPayPalScript();\n      this.payPalButtonContainerId = this.generateElementId();\n      this.initializePayPal = true;\n\n      if (this.payPalButtonContainerElem) {\n        while (this.payPalButtonContainerElem.nativeElement.firstChild) {\n          this.payPalButtonContainerElem.nativeElement.removeChild(this.payPalButtonContainerElem.nativeElement.firstChild);\n        }\n      }\n\n      this.cdr.detectChanges();\n\n      if (this.config) {\n        if (!this.payPal) {\n          this.initPayPalScript(this.config,\n          /**\r\n          * @param {?} payPal\r\n          * @return {?}\r\n          */\n          payPal => {\n            // store reference to paypal global script\n            this.payPal = payPal;\n            this.doPayPalCheck();\n          });\n        } else {\n          this.doPayPalCheck();\n        }\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n\n    doPayPalCheck() {\n      if (this.initializePayPal && this.config && this.payPal && this.payPalButtonContainerElem) {\n        // make sure that id is also set\n        if (this.payPalButtonContainerElem.nativeElement.id) {\n          this.initializePayPal = false;\n          this.initPayPal(this.config, this.payPal);\n        }\n      }\n    }\n    /**\r\n     * @private\r\n     * @param {?} config\r\n     * @param {?} initPayPal\r\n     * @return {?}\r\n     */\n\n\n    initPayPalScript(config, initPayPal) {\n      this.paypalScriptService.registerPayPalScript({\n        clientId: config.clientId,\n        commit: config.advanced && config.advanced.commit ? config.advanced.commit : undefined,\n        currency: config.currency,\n        vault: config.vault,\n        extraParams: config.advanced && config.advanced.extraQueryParams ? config.advanced.extraQueryParams : []\n      },\n      /**\r\n      * @param {?} paypal\r\n      * @return {?}\r\n      */\n      paypal => {\n        this.scriptLoaded.next(paypal);\n        initPayPal(paypal);\n      });\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n\n    generateElementId() {\n      return `ngx-captcha-id-${new Date().valueOf()}`;\n    }\n    /**\r\n     * @private\r\n     * @param {?} config\r\n     * @param {?} paypal\r\n     * @return {?}\r\n     */\n\n\n    initPayPal(config, paypal) {\n      // Running outside angular zone prevents infinite ngDoCheck lifecycle calls\n      this.ngZone.runOutsideAngular(\n      /**\r\n      * @return {?}\r\n      */\n      () => {\n        // https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page\n\n        /** @type {?} */\n        const createOrder =\n        /**\r\n        * @param {?} data\r\n        * @param {?} actions\r\n        * @return {?}\r\n        */\n        (data, actions) => {\n          return this.ngZone.run(\n          /**\r\n          * @return {?}\r\n          */\n          () => {\n            if (config.createOrderOnClient && config.createOrderOnServer) {\n              throw Error(`Both 'createOrderOnClient' and 'createOrderOnServer' are defined.\n                    Please choose one or the other.`);\n            }\n\n            if (!config.createOrderOnClient && !config.createOrderOnServer) {\n              throw Error(`Neither 'createOrderOnClient' or 'createOrderOnServer' are defined.\n                    Please define one of these to create order.`);\n            }\n\n            if (config.createOrderOnClient) {\n              return actions.order.create(config.createOrderOnClient(data));\n            }\n\n            if (config.createOrderOnServer) {\n              return config.createOrderOnServer(data);\n            }\n\n            throw Error(`Invalid state for 'createOrder'.`);\n          });\n        };\n        /** @type {?} */\n\n\n        const createSubscription =\n        /**\r\n        * @param {?} data\r\n        * @param {?} actions\r\n        * @return {?}\r\n        */\n        (data, actions) => {\n          return this.ngZone.run(\n          /**\r\n          * @return {?}\r\n          */\n          () => {\n            if (config.createSubscription) {\n              return config.createSubscription(data, actions);\n            }\n          });\n        };\n        /** @type {?} */\n\n\n        const onShippingChange =\n        /**\r\n        * @param {?} data\r\n        * @param {?} actions\r\n        * @return {?}\r\n        */\n        (data, actions) => {\n          return this.ngZone.run(\n          /**\r\n          * @return {?}\r\n          */\n          () => {\n            if (config.onShippingChange) {\n              return config.onShippingChange(data, actions);\n            }\n          });\n        };\n        /** @type {?} */\n\n\n        const buttonsConfig = Object.assign(Object.assign(Object.assign({\n          style: config.style,\n          onApprove:\n          /**\r\n          * @param {?} data\r\n          * @param {?} actions\r\n          * @return {?}\r\n          */\n          (data, actions) => {\n            return this.ngZone.run(\n            /**\r\n            * @return {?}\r\n            */\n            () => {\n              if (config.onApprove) {\n                config.onApprove(data, actions);\n              } // capture on server\n\n\n              if (config.authorizeOnServer) {\n                return config.authorizeOnServer(data, actions);\n              } // capture on client\n\n              /** @type {?} */\n\n\n              const onClientAuthorization = config.onClientAuthorization;\n\n              if (onClientAuthorization) {\n                actions.order.capture().then(\n                /**\r\n                * @param {?} details\r\n                * @return {?}\r\n                */\n                details => {\n                  this.ngZone.run(\n                  /**\r\n                  * @return {?}\r\n                  */\n                  () => {\n                    onClientAuthorization(details);\n                  });\n                });\n                return;\n              }\n            });\n          },\n          onError:\n          /**\r\n          * @param {?} error\r\n          * @return {?}\r\n          */\n          error => {\n            this.ngZone.run(\n            /**\r\n            * @return {?}\r\n            */\n            () => {\n              if (config.onError) {\n                config.onError(error);\n              }\n            });\n          },\n          onCancel:\n          /**\r\n          * @param {?} data\r\n          * @param {?} actions\r\n          * @return {?}\r\n          */\n          (data, actions) => {\n            this.ngZone.run(\n            /**\r\n            * @return {?}\r\n            */\n            () => {\n              if (config.onCancel) {\n                config.onCancel(data, actions);\n              }\n            });\n          },\n          onClick:\n          /**\r\n          * @param {?} data\r\n          * @param {?} actions\r\n          * @return {?}\r\n          */\n          (data, actions) => {\n            this.ngZone.run(\n            /**\r\n            * @return {?}\r\n            */\n            () => {\n              if (config.onClick) {\n                config.onClick(data, actions);\n              }\n            });\n          },\n          onInit:\n          /**\r\n          * @param {?} data\r\n          * @param {?} actions\r\n          * @return {?}\r\n          */\n          (data, actions) => {\n            this.ngZone.run(\n            /**\r\n            * @return {?}\r\n            */\n            () => {\n              if (config.onInit) {\n                config.onInit(data, actions);\n              }\n            });\n          }\n        }, (config.createOrderOnClient || config.createOrderOnServer) && {\n          createOrder\n        }), config.createSubscription && {\n          createSubscription\n        }), config.onShippingChange && {\n          onShippingChange\n        });\n        paypal.Buttons(buttonsConfig).render(`#${this.payPalButtonContainerId}`);\n      });\n    }\n\n  }\n\n  NgxPaypalComponent.ɵfac = function NgxPaypalComponent_Factory(t) {\n    return new (t || NgxPaypalComponent)(ɵngcc0.ɵɵdirectiveInject(PayPalScriptService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  NgxPaypalComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NgxPaypalComponent,\n    selectors: [[\"ngx-paypal\"]],\n    viewQuery: function NgxPaypalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.payPalButtonContainer = _t.first);\n      }\n    },\n    inputs: {\n      registerScript: \"registerScript\",\n      config: \"config\"\n    },\n    outputs: {\n      scriptLoaded: \"scriptLoaded\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"id\"], [\"payPalButtonContainer\", \"\"]],\n    template: function NgxPaypalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.payPalButtonContainerId);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /** @nocollapse */\n\n  NgxPaypalComponent.ctorParameters = () => [{\n    type: PayPalScriptService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NgZone\n  }];\n\n  NgxPaypalComponent.propDecorators = {\n    config: [{\n      type: Input\n    }],\n    registerScript: [{\n      type: Input\n    }],\n    scriptLoaded: [{\n      type: Output\n    }],\n    payPalButtonContainer: [{\n      type: ViewChild,\n      args: ['payPalButtonContainer', {\n        static: false\n      }]\n    }]\n  };\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxPaypalComponent, [{\n      type: Component,\n      args: [{\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        selector: 'ngx-paypal',\n        template: `\n    <div #payPalButtonContainer [id]=\"payPalButtonContainerId\"></div>\n    `\n      }]\n    }], function () {\n      return [{\n        type: PayPalScriptService\n      }, {\n        type: ɵngcc0.ChangeDetectorRef\n      }, {\n        type: ɵngcc0.NgZone\n      }];\n    }, {\n      registerScript: [{\n        type: Input\n      }],\n      scriptLoaded: [{\n        type: Output\n      }],\n      payPalButtonContainer: [{\n        type: ViewChild,\n        args: ['payPalButtonContainer', {\n          static: false\n        }]\n      }],\n      config: [{\n        type: Input\n      }]\n    });\n  })();\n\n  return NgxPaypalComponent;\n})();\n\nif (false) {\n  /**\r\n   * Configuration for paypal.\r\n   * @type {?}\r\n   */\n  NgxPaypalComponent.prototype.config;\n  /**\r\n   * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n   * sharing base configuration. In such a case only a single component may register script.\r\n   * @type {?}\r\n   */\n\n  NgxPaypalComponent.prototype.registerScript;\n  /**\r\n   * Emitted when paypal script is loaded\r\n   * @type {?}\r\n   */\n\n  NgxPaypalComponent.prototype.scriptLoaded;\n  /**\r\n   * Id of the element where PayPal button will be rendered\r\n   * @type {?}\r\n   */\n\n  NgxPaypalComponent.prototype.payPalButtonContainerId;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  NgxPaypalComponent.prototype.ngUnsubscribe;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  NgxPaypalComponent.prototype.payPalButtonContainerElem;\n  /**\r\n   * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  NgxPaypalComponent.prototype.initializePayPal;\n  /**\r\n   * Reference to PayPal global API\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  NgxPaypalComponent.prototype.payPal;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  NgxPaypalComponent.prototype.paypalScriptService;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  NgxPaypalComponent.prototype.cdr;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  NgxPaypalComponent.prototype.ngZone;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/ngx-paypal.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nlet NgxPayPalModule =\n/** @class */\n(() => {\n  class NgxPayPalModule {}\n\n  NgxPayPalModule.ɵfac = function NgxPayPalModule_Factory(t) {\n    return new (t || NgxPayPalModule)();\n  };\n\n  NgxPayPalModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NgxPayPalModule\n  });\n  NgxPayPalModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [ScriptService, PayPalScriptService],\n    imports: [CommonModule]\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxPayPalModule, [{\n      type: NgModule,\n      args: [{\n        imports: [CommonModule],\n        declarations: [NgxPaypalComponent],\n        exports: [NgxPaypalComponent],\n        providers: [ScriptService, PayPalScriptService]\n      }]\n    }], null, null);\n  })();\n\n  (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxPayPalModule, {\n      declarations: function () {\n        return [NgxPaypalComponent];\n      },\n      imports: function () {\n        return [CommonModule];\n      },\n      exports: function () {\n        return [NgxPaypalComponent];\n      }\n    });\n  })();\n\n  return NgxPayPalModule;\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/paypal-models.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @record\r\n */\n\n\nfunction IPayPalConfig() {}\n\nif (false) {\n  /**\r\n   * Currency - Defaults to USD if not provided\r\n   * @type {?|undefined}\r\n   */\n  IPayPalConfig.prototype.currency;\n  /**\r\n   * Use when creating order on client\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.createOrderOnClient;\n  /**\r\n   * Use for creating orders on server. PayPal expects you to return 'orderId' in this method\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.createOrderOnServer;\n  /**\r\n   * Advanced configuration\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.advanced;\n  /**\r\n   * Client id\r\n   * @type {?}\r\n   */\n\n  IPayPalConfig.prototype.clientId;\n  /**\r\n   * Shipping callback\r\n   * see https://developer.paypal.com/docs/checkout/integration-features/shipping-callback/\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.onShippingChange;\n  /**\r\n   * Called when 'onApprove' event occurs\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.onApprove;\n  /**\r\n   * Called when authorization on client succeeds\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.onClientAuthorization;\n  /**\r\n   * Implement for authorizing on server side\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.authorizeOnServer;\n  /**\r\n   * Button style configuration\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.style;\n  /**\r\n   * Error handler\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.onError;\n  /**\r\n   * Click handler\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.onClick;\n  /**\r\n   * Cancel handler\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.onCancel;\n  /**\r\n   * Init handler.\r\n   * can be used for validation, see: https://developer.paypal.com/docs/checkout/integration-features/validation/#\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.onInit;\n  /**\r\n   * Create subscription handler\r\n   * https://developer.paypal.com/docs/subscriptions/integrate/\r\n   *\r\n   * Note: the vault property in the advanced configuration also has to be set to true\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.createSubscription;\n  /**\r\n   * Vault - must be set to true when creating subscriptions\r\n   * @type {?|undefined}\r\n   */\n\n  IPayPalConfig.prototype.vault;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IPayPalUrlConfig() {}\n\nif (false) {\n  /** @type {?} */\n  IPayPalUrlConfig.prototype.clientId;\n  /** @type {?|undefined} */\n\n  IPayPalUrlConfig.prototype.currency;\n  /** @type {?|undefined} */\n\n  IPayPalUrlConfig.prototype.commit;\n  /** @type {?|undefined} */\n\n  IPayPalUrlConfig.prototype.vault;\n  /** @type {?|undefined} */\n\n  IPayPalUrlConfig.prototype.extraParams;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IOrderDetails() {}\n\nif (false) {\n  /** @type {?} */\n  IOrderDetails.prototype.create_time;\n  /** @type {?} */\n\n  IOrderDetails.prototype.update_time;\n  /** @type {?} */\n\n  IOrderDetails.prototype.id;\n  /** @type {?} */\n\n  IOrderDetails.prototype.intent;\n  /** @type {?} */\n\n  IOrderDetails.prototype.payer;\n  /** @type {?} */\n\n  IOrderDetails.prototype.status;\n  /** @type {?} */\n\n  IOrderDetails.prototype.links;\n  /** @type {?} */\n\n  IOrderDetails.prototype.purchase_units;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IClientAuthorizeCallbackData() {}\n\nif (false) {\n  /** @type {?} */\n  IClientAuthorizeCallbackData.prototype.links;\n}\n/**\r\n * @record\r\n */\n\n\nfunction ILinkDescription() {}\n\nif (false) {\n  /** @type {?} */\n  ILinkDescription.prototype.href;\n  /** @type {?} */\n\n  ILinkDescription.prototype.rel;\n  /** @type {?|undefined} */\n\n  ILinkDescription.prototype.method;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IQueryParam() {}\n\nif (false) {\n  /** @type {?} */\n  IQueryParam.prototype.name;\n  /** @type {?} */\n\n  IQueryParam.prototype.value;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IOnShippingChangeData() {}\n\nif (false) {\n  /** @type {?} */\n  IOnShippingChangeData.prototype.paymentToken;\n  /** @type {?} */\n\n  IOnShippingChangeData.prototype.shipping_address;\n  /** @type {?|undefined} */\n\n  IOnShippingChangeData.prototype.selected_shipping_method;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IOnShippingChangeActions() {}\n\nif (false) {\n  /** @type {?} */\n  IOnShippingChangeActions.prototype.resolve;\n  /** @type {?} */\n\n  IOnShippingChangeActions.prototype.reject;\n  /** @type {?} */\n\n  IOnShippingChangeActions.prototype.patch;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IAdvancedConfiguration() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IAdvancedConfiguration.prototype.commit;\n  /** @type {?|undefined} */\n\n  IAdvancedConfiguration.prototype.extraQueryParams;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IOnApproveCallbackData() {}\n\nif (false) {\n  /** @type {?} */\n  IOnApproveCallbackData.prototype.orderID;\n  /** @type {?} */\n\n  IOnApproveCallbackData.prototype.payerID;\n  /** @type {?} */\n\n  IOnApproveCallbackData.prototype.subscriptionID;\n}\n/**\r\n * @record\r\n */\n\n\nfunction ICreateOrderCallbackActions() {}\n\nif (false) {\n  /** @type {?} */\n  ICreateOrderCallbackActions.prototype.order;\n}\n/**\r\n * @record\r\n */\n\n\nfunction ICancelCallbackData() {}\n\nif (false) {\n  /** @type {?} */\n  ICancelCallbackData.prototype.orderID;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IOnApproveCallbackActions() {}\n\nif (false) {\n  /** @type {?} */\n  IOnApproveCallbackActions.prototype.redirect;\n  /** @type {?} */\n\n  IOnApproveCallbackActions.prototype.restart;\n  /** @type {?} */\n\n  IOnApproveCallbackActions.prototype.order;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IOnInitCallbackActions() {}\n\nif (false) {\n  /** @type {?} */\n  IOnInitCallbackActions.prototype.enable;\n  /** @type {?} */\n\n  IOnInitCallbackActions.prototype.disable;\n}\n/**\r\n * @record\r\n */\n\n\nfunction ICreateSubscriptionCallbackActions() {}\n\nif (false) {\n  /** @type {?} */\n  ICreateSubscriptionCallbackActions.prototype.subscription;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IInitCallbackData() {}\n/**\r\n * @record\r\n */\n\n\nfunction ICreateSubscriptionCallbackData() {}\n/**\r\n * @record\r\n */\n\n\nfunction IOnClickCallbackActions() {}\n\nif (false) {\n  /** @type {?} */\n  IOnClickCallbackActions.prototype.resolve;\n  /** @type {?} */\n\n  IOnClickCallbackActions.prototype.reject;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IPayPalButtonStyle() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IPayPalButtonStyle.prototype.label;\n  /** @type {?|undefined} */\n\n  IPayPalButtonStyle.prototype.size;\n  /** @type {?|undefined} */\n\n  IPayPalButtonStyle.prototype.shape;\n  /** @type {?|undefined} */\n\n  IPayPalButtonStyle.prototype.color;\n  /** @type {?|undefined} */\n\n  IPayPalButtonStyle.prototype.layout;\n  /** @type {?|undefined} */\n\n  IPayPalButtonStyle.prototype.tagline;\n  /** @type {?|undefined} */\n\n  IPayPalButtonStyle.prototype.height;\n}\n/**\r\n * @record\r\n */\n\n\nfunction ICreateOrderRequest() {}\n\nif (false) {\n  /** @type {?} */\n  ICreateOrderRequest.prototype.intent;\n  /** @type {?} */\n\n  ICreateOrderRequest.prototype.purchase_units;\n  /** @type {?|undefined} */\n\n  ICreateOrderRequest.prototype.payer;\n  /** @type {?|undefined} */\n\n  ICreateOrderRequest.prototype.application_context;\n}\n/**\r\n * @record\r\n */\n\n\nfunction ICreateSubscriptionRequest() {}\n\nif (false) {\n  /** @type {?} */\n  ICreateSubscriptionRequest.prototype.plan_id;\n  /** @type {?|undefined} */\n\n  ICreateSubscriptionRequest.prototype.quantity;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IPayer() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IPayer.prototype.name;\n  /** @type {?|undefined} */\n\n  IPayer.prototype.email_address;\n  /** @type {?|undefined} */\n\n  IPayer.prototype.payer_id;\n  /** @type {?|undefined} */\n\n  IPayer.prototype.birth_date;\n  /** @type {?|undefined} */\n\n  IPayer.prototype.tax_info;\n  /** @type {?|undefined} */\n\n  IPayer.prototype.address;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IApplicationContext() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IApplicationContext.prototype.brand_name;\n  /** @type {?|undefined} */\n\n  IApplicationContext.prototype.locale;\n  /** @type {?|undefined} */\n\n  IApplicationContext.prototype.landing_page;\n  /** @type {?|undefined} */\n\n  IApplicationContext.prototype.shipping_preference;\n  /** @type {?|undefined} */\n\n  IApplicationContext.prototype.user_action;\n  /** @type {?|undefined} */\n\n  IApplicationContext.prototype.payment_method;\n  /** @type {?|undefined} */\n\n  IApplicationContext.prototype.return_url;\n  /** @type {?|undefined} */\n\n  IApplicationContext.prototype.cancel_url;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IPaymentMethod() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IPaymentMethod.prototype.payer_selected;\n  /** @type {?|undefined} */\n\n  IPaymentMethod.prototype.payee_preferred;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IPhone() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IPhone.prototype.phone_type;\n  /** @type {?|undefined} */\n\n  IPhone.prototype.phone_number;\n}\n/**\r\n * @record\r\n */\n\n\nfunction ITaxInfo() {}\n\nif (false) {\n  /** @type {?} */\n  ITaxInfo.prototype.tax_id;\n  /** @type {?} */\n\n  ITaxInfo.prototype.tax_id_type;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IPhoneNumber() {}\n\nif (false) {\n  /** @type {?} */\n  IPhoneNumber.prototype.national_number;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IPurchaseUnit() {}\n\nif (false) {\n  /** @type {?} */\n  IPurchaseUnit.prototype.amount;\n  /** @type {?|undefined} */\n\n  IPurchaseUnit.prototype.reference_id;\n  /** @type {?|undefined} */\n\n  IPurchaseUnit.prototype.payee;\n  /** @type {?|undefined} */\n\n  IPurchaseUnit.prototype.payment_instruction;\n  /** @type {?|undefined} */\n\n  IPurchaseUnit.prototype.description;\n  /** @type {?|undefined} */\n\n  IPurchaseUnit.prototype.custom_id;\n  /** @type {?|undefined} */\n\n  IPurchaseUnit.prototype.invoice_id;\n  /** @type {?|undefined} */\n\n  IPurchaseUnit.prototype.soft_descriptor;\n  /** @type {?} */\n\n  IPurchaseUnit.prototype.items;\n  /** @type {?|undefined} */\n\n  IPurchaseUnit.prototype.shipping;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IPayee() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IPayee.prototype.email_address;\n  /** @type {?|undefined} */\n\n  IPayee.prototype.merchant_id;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IPaymentInstructions() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IPaymentInstructions.prototype.platform_fees;\n  /** @type {?|undefined} */\n\n  IPaymentInstructions.prototype.disbursement_mode;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IPlatformFee() {}\n\nif (false) {\n  /** @type {?} */\n  IPlatformFee.prototype.amount;\n  /** @type {?|undefined} */\n\n  IPlatformFee.prototype.payee;\n}\n/**\r\n * @record\r\n */\n\n\nfunction ITransactionItem() {}\n\nif (false) {\n  /** @type {?} */\n  ITransactionItem.prototype.name;\n  /** @type {?} */\n\n  ITransactionItem.prototype.unit_amount;\n  /** @type {?} */\n\n  ITransactionItem.prototype.quantity;\n  /** @type {?|undefined} */\n\n  ITransactionItem.prototype.description;\n  /** @type {?|undefined} */\n\n  ITransactionItem.prototype.sku;\n  /** @type {?|undefined} */\n\n  ITransactionItem.prototype.category;\n  /** @type {?|undefined} */\n\n  ITransactionItem.prototype.tax;\n}\n/**\r\n * @record\r\n */\n\n\nfunction ITax() {}\n\nif (false) {\n  /** @type {?} */\n  ITax.prototype.currency_code;\n  /** @type {?} */\n\n  ITax.prototype.value;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IUnitAmount() {}\n\nif (false) {\n  /** @type {?} */\n  IUnitAmount.prototype.currency_code;\n  /** @type {?} */\n\n  IUnitAmount.prototype.value;\n  /** @type {?|undefined} */\n\n  IUnitAmount.prototype.breakdown;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IMoney() {}\n\nif (false) {\n  /** @type {?} */\n  IMoney.prototype.currency_code;\n  /** @type {?} */\n\n  IMoney.prototype.value;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IUnitBreakdown() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IUnitBreakdown.prototype.item_total;\n  /** @type {?|undefined} */\n\n  IUnitBreakdown.prototype.shipping;\n  /** @type {?|undefined} */\n\n  IUnitBreakdown.prototype.handling;\n  /** @type {?|undefined} */\n\n  IUnitBreakdown.prototype.tax_total;\n  /** @type {?|undefined} */\n\n  IUnitBreakdown.prototype.insurance;\n  /** @type {?|undefined} */\n\n  IUnitBreakdown.prototype.shipping_discount;\n  /** @type {?|undefined} */\n\n  IUnitBreakdown.prototype.discount;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IPartyName() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IPartyName.prototype.prefix;\n  /** @type {?|undefined} */\n\n  IPartyName.prototype.given_name;\n  /** @type {?|undefined} */\n\n  IPartyName.prototype.surname;\n  /** @type {?|undefined} */\n\n  IPartyName.prototype.middle_name;\n  /** @type {?|undefined} */\n\n  IPartyName.prototype.suffix;\n  /** @type {?|undefined} */\n\n  IPartyName.prototype.alternate_full_name;\n  /** @type {?|undefined} */\n\n  IPartyName.prototype.full_name;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IAddressPortable() {}\n\nif (false) {\n  /** @type {?} */\n  IAddressPortable.prototype.country_code;\n  /** @type {?|undefined} */\n\n  IAddressPortable.prototype.address_line_1;\n  /** @type {?|undefined} */\n\n  IAddressPortable.prototype.address_line_2;\n  /** @type {?|undefined} */\n\n  IAddressPortable.prototype.admin_area_2;\n  /** @type {?|undefined} */\n\n  IAddressPortable.prototype.admin_area_1;\n  /** @type {?|undefined} */\n\n  IAddressPortable.prototype.postal_code;\n}\n/**\r\n * @record\r\n */\n\n\nfunction IShipping() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IShipping.prototype.name;\n  /** @type {?|undefined} */\n\n  IShipping.prototype.address;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ngx-paypal.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nexport { NgxPayPalModule, NgxPaypalComponent, PayPalScriptService, ScriptService as ɵa };","map":{"version":3,"names":["CommonModule","Injectable","NgZone","EventEmitter","Component","ChangeDetectionStrategy","ChangeDetectorRef","Input","Output","ViewChild","NgModule","Subject","ɵngcc0","_c0","ScriptService","constructor","zone","registerScript","url","globalVar","onReady","existingGlobalVar","window","run","scriptElem","document","createElement","id","getElemId","innerHTML","onload","src","async","defer","getElementsByTagName","appendChild","cleanup","getElementById","remove","ɵfac","ScriptService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ctorParameters","type","ngDevMode","ɵsetClassMetadata","prototype","PayPalScriptService","scriptService","paypalWindowName","registerPayPalScript","config","getUrlForConfig","destroyPayPalScript","params","name","value","clientId","currency","push","commit","vault","extraParams","getQueryString","queryParams","queryString","i","length","queryParam","PayPalScriptService_Factory","NgxPaypalComponent","paypalScriptService","cdr","ngZone","scriptLoaded","ngUnsubscribe","initializePayPal","payPalButtonContainer","content","payPalButtonContainerElem","ngOnChanges","changes","payPalButtonContainerId","generateElementId","isFirstChange","initPayPalScript","payPal","doPayPalCheck","reinitialize","ngOnDestroy","next","complete","ngAfterViewInit","customInit","undefined","nativeElement","firstChild","removeChild","detectChanges","initPayPal","advanced","extraQueryParams","paypal","Date","valueOf","runOutsideAngular","createOrder","data","actions","createOrderOnClient","createOrderOnServer","Error","order","create","createSubscription","onShippingChange","buttonsConfig","Object","assign","style","onApprove","authorizeOnServer","onClientAuthorization","capture","then","details","onError","error","onCancel","onClick","onInit","Buttons","render","NgxPaypalComponent_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","NgxPaypalComponent_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","NgxPaypalComponent_Template","ɵɵelement","ɵɵproperty","encapsulation","changeDetection","propDecorators","args","static","OnPush","selector","NgxPayPalModule","NgxPayPalModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","IPayPalConfig","IPayPalUrlConfig","IOrderDetails","create_time","update_time","intent","payer","status","links","purchase_units","IClientAuthorizeCallbackData","ILinkDescription","href","rel","method","IQueryParam","IOnShippingChangeData","paymentToken","shipping_address","selected_shipping_method","IOnShippingChangeActions","resolve","reject","patch","IAdvancedConfiguration","IOnApproveCallbackData","orderID","payerID","subscriptionID","ICreateOrderCallbackActions","ICancelCallbackData","IOnApproveCallbackActions","redirect","restart","IOnInitCallbackActions","enable","disable","ICreateSubscriptionCallbackActions","subscription","IInitCallbackData","ICreateSubscriptionCallbackData","IOnClickCallbackActions","IPayPalButtonStyle","label","size","shape","color","layout","tagline","height","ICreateOrderRequest","application_context","ICreateSubscriptionRequest","plan_id","quantity","IPayer","email_address","payer_id","birth_date","tax_info","address","IApplicationContext","brand_name","locale","landing_page","shipping_preference","user_action","payment_method","return_url","cancel_url","IPaymentMethod","payer_selected","payee_preferred","IPhone","phone_type","phone_number","ITaxInfo","tax_id","tax_id_type","IPhoneNumber","national_number","IPurchaseUnit","amount","reference_id","payee","payment_instruction","description","custom_id","invoice_id","soft_descriptor","items","shipping","IPayee","merchant_id","IPaymentInstructions","platform_fees","disbursement_mode","IPlatformFee","ITransactionItem","unit_amount","sku","category","tax","ITax","currency_code","IUnitAmount","breakdown","IMoney","IUnitBreakdown","item_total","handling","tax_total","insurance","shipping_discount","discount","IPartyName","prefix","given_name","surname","middle_name","suffix","alternate_full_name","full_name","IAddressPortable","country_code","address_line_1","address_line_2","admin_area_2","admin_area_1","postal_code","IShipping","ɵa"],"sources":["E:/Dev/Ispc/final/ispc-final/Fontend/Blackuv/node_modules/ngx-paypal/__ivy_ngcc__/fesm2015/ngx-paypal.js"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Injectable, NgZone, EventEmitter, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/script.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"payPalButtonContainer\"];\nlet ScriptService = /** @class */ (() => {\r\n    class ScriptService {\r\n        /**\r\n         * @param {?} zone\r\n         */\r\n        constructor(zone) {\r\n            this.zone = zone;\r\n        }\r\n        /**\r\n         * @param {?} url\r\n         * @param {?} globalVar\r\n         * @param {?} onReady\r\n         * @return {?}\r\n         */\r\n        registerScript(url, globalVar, onReady) {\r\n            /** @type {?} */\r\n            const existingGlobalVar = ((/** @type {?} */ (window)))[globalVar];\r\n            if (existingGlobalVar) {\r\n                // global variable is present = script was already loaded\r\n                this.zone.run((/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    onReady(existingGlobalVar);\r\n                }));\r\n                return;\r\n            }\r\n            // prepare script elem\r\n            /** @type {?} */\r\n            const scriptElem = document.createElement('script');\r\n            scriptElem.id = this.getElemId(globalVar);\r\n            scriptElem.innerHTML = '';\r\n            scriptElem.onload = (/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                this.zone.run((/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    onReady(((/** @type {?} */ (window)))[globalVar]);\r\n                }));\r\n            });\r\n            scriptElem.src = url;\r\n            scriptElem.async = true;\r\n            scriptElem.defer = true;\r\n            // add script to header\r\n            document.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n        }\r\n        /**\r\n         * @param {?} globalVar\r\n         * @return {?}\r\n         */\r\n        cleanup(globalVar) {\r\n            // remove script from DOM\r\n            /** @type {?} */\r\n            const scriptElem = document.getElementById(this.getElemId(globalVar));\r\n            if (scriptElem) {\r\n                scriptElem.remove();\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} globalVar\r\n         * @return {?}\r\n         */\r\n        getElemId(globalVar) {\r\n            return `ngx-paypal-script-elem-${globalVar}`;\r\n        }\r\n    }\nScriptService.ɵfac = function ScriptService_Factory(t) { return new (t || ScriptService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nScriptService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ScriptService, factory: function (t) { return ScriptService.ɵfac(t); } });\r\n    /** @nocollapse */\r\n    ScriptService.ctorParameters = () => [\r\n        { type: NgZone }\r\n    ];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScriptService, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\r\n    return ScriptService;\r\n})();\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    ScriptService.prototype.zone;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/services/paypal-script.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nlet PayPalScriptService = /** @class */ (() => {\r\n    class PayPalScriptService {\r\n        /**\r\n         * @param {?} scriptService\r\n         */\r\n        constructor(scriptService) {\r\n            this.scriptService = scriptService;\r\n            this.paypalWindowName = 'paypal';\r\n        }\r\n        /**\r\n         * @param {?} config\r\n         * @param {?} onReady\r\n         * @return {?}\r\n         */\r\n        registerPayPalScript(config, onReady) {\r\n            this.scriptService.registerScript(this.getUrlForConfig(config), this.paypalWindowName, onReady);\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        destroyPayPalScript() {\r\n            this.scriptService.cleanup(this.paypalWindowName);\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} config\r\n         * @return {?}\r\n         */\r\n        getUrlForConfig(config) {\r\n            /** @type {?} */\r\n            const params = [\r\n                {\r\n                    name: 'client-id',\r\n                    value: config.clientId\r\n                }\r\n            ];\r\n            if (config.currency) {\r\n                params.push({\r\n                    name: 'currency',\r\n                    value: config.currency\r\n                });\r\n            }\r\n            if (config.commit) {\r\n                params.push({\r\n                    name: 'commit',\r\n                    value: config.commit\r\n                });\r\n            }\r\n            if (config.vault) {\r\n                params.push({\r\n                    name: 'vault',\r\n                    value: config.vault\r\n                });\r\n            }\r\n            if (config.extraParams) {\r\n                params.push(...config.extraParams);\r\n            }\r\n            return `https://www.paypal.com/sdk/js${this.getQueryString(params)}`;\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} queryParams\r\n         * @return {?}\r\n         */\r\n        getQueryString(queryParams) {\r\n            /** @type {?} */\r\n            let queryString = '';\r\n            for (let i = 0; i < queryParams.length; i++) {\r\n                /** @type {?} */\r\n                const queryParam = queryParams[i];\r\n                if (i === 0) {\r\n                    queryString += '?';\r\n                }\r\n                else {\r\n                    queryString += '&';\r\n                }\r\n                queryString += `${queryParam.name}=${queryParam.value}`;\r\n            }\r\n            return queryString;\r\n        }\r\n    }\nPayPalScriptService.ɵfac = function PayPalScriptService_Factory(t) { return new (t || PayPalScriptService)(ɵngcc0.ɵɵinject(ScriptService)); };\nPayPalScriptService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PayPalScriptService, factory: function (t) { return PayPalScriptService.ɵfac(t); } });\r\n    /** @nocollapse */\r\n    PayPalScriptService.ctorParameters = () => [\r\n        { type: ScriptService }\r\n    ];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PayPalScriptService, [{\n        type: Injectable\n    }], function () { return [{ type: ScriptService }]; }, null); })();\r\n    return PayPalScriptService;\r\n})();\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    PayPalScriptService.prototype.paypalWindowName;\r\n    /**\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    PayPalScriptService.prototype.scriptService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/components/paypal.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nlet NgxPaypalComponent = /** @class */ (() => {\r\n    class NgxPaypalComponent {\r\n        /**\r\n         * @param {?} paypalScriptService\r\n         * @param {?} cdr\r\n         * @param {?} ngZone\r\n         */\r\n        constructor(paypalScriptService, cdr, ngZone) {\r\n            this.paypalScriptService = paypalScriptService;\r\n            this.cdr = cdr;\r\n            this.ngZone = ngZone;\r\n            /**\r\n             * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n             * sharing base configuration. In such a case only a single component may register script.\r\n             */\r\n            this.registerScript = true;\r\n            /**\r\n             * Emitted when paypal script is loaded\r\n             */\r\n            this.scriptLoaded = new EventEmitter();\r\n            this.ngUnsubscribe = new Subject();\r\n            /**\r\n             * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n             */\r\n            this.initializePayPal = true;\r\n        }\r\n        /**\r\n         * @param {?} content\r\n         * @return {?}\r\n         */\r\n        set payPalButtonContainer(content) {\r\n            this.payPalButtonContainerElem = content;\r\n        }\r\n        /**\r\n         * @param {?} changes\r\n         * @return {?}\r\n         */\r\n        ngOnChanges(changes) {\r\n            if (!this.payPalButtonContainerId) {\r\n                this.payPalButtonContainerId = this.generateElementId();\r\n            }\r\n            // first time config setup\r\n            /** @type {?} */\r\n            const config = this.config;\r\n            if (changes.config.isFirstChange()) {\r\n                if (config && this.registerScript) {\r\n                    this.initPayPalScript(config, (/**\r\n                     * @param {?} payPal\r\n                     * @return {?}\r\n                     */\r\n                    (payPal) => {\r\n                        // store reference to paypal global script\r\n                        this.payPal = payPal;\r\n                        this.doPayPalCheck();\r\n                    }));\r\n                }\r\n            }\r\n            // changes to config\r\n            if (!changes.config.isFirstChange()) {\r\n                this.reinitialize(config);\r\n            }\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ngOnDestroy() {\r\n            this.paypalScriptService.destroyPayPalScript();\r\n            this.ngUnsubscribe.next();\r\n            this.ngUnsubscribe.complete();\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ngAfterViewInit() {\r\n            this.doPayPalCheck();\r\n        }\r\n        /**\r\n         * @param {?} payPal\r\n         * @return {?}\r\n         */\r\n        customInit(payPal) {\r\n            this.payPal = payPal;\r\n            this.doPayPalCheck();\r\n        }\r\n        /**\r\n         * @param {?} config\r\n         * @return {?}\r\n         */\r\n        reinitialize(config) {\r\n            this.config = config;\r\n            this.payPal = undefined;\r\n            this.paypalScriptService.destroyPayPalScript();\r\n            this.payPalButtonContainerId = this.generateElementId();\r\n            this.initializePayPal = true;\r\n            if (this.payPalButtonContainerElem) {\r\n                while (this.payPalButtonContainerElem.nativeElement.firstChild) {\r\n                    this.payPalButtonContainerElem.nativeElement.removeChild(this.payPalButtonContainerElem.nativeElement.firstChild);\r\n                }\r\n            }\r\n            this.cdr.detectChanges();\r\n            if (this.config) {\r\n                if (!this.payPal) {\r\n                    this.initPayPalScript(this.config, (/**\r\n                     * @param {?} payPal\r\n                     * @return {?}\r\n                     */\r\n                    (payPal) => {\r\n                        // store reference to paypal global script\r\n                        this.payPal = payPal;\r\n                        this.doPayPalCheck();\r\n                    }));\r\n                }\r\n                else {\r\n                    this.doPayPalCheck();\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        doPayPalCheck() {\r\n            if (this.initializePayPal && this.config && this.payPal && this.payPalButtonContainerElem) {\r\n                // make sure that id is also set\r\n                if (this.payPalButtonContainerElem.nativeElement.id) {\r\n                    this.initializePayPal = false;\r\n                    this.initPayPal(this.config, this.payPal);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} config\r\n         * @param {?} initPayPal\r\n         * @return {?}\r\n         */\r\n        initPayPalScript(config, initPayPal) {\r\n            this.paypalScriptService.registerPayPalScript({\r\n                clientId: config.clientId,\r\n                commit: config.advanced && config.advanced.commit ? config.advanced.commit : undefined,\r\n                currency: config.currency,\r\n                vault: config.vault,\r\n                extraParams: config.advanced && config.advanced.extraQueryParams ? config.advanced.extraQueryParams : []\r\n            }, (/**\r\n             * @param {?} paypal\r\n             * @return {?}\r\n             */\r\n            (paypal) => {\r\n                this.scriptLoaded.next(paypal);\r\n                initPayPal(paypal);\r\n            }));\r\n        }\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        generateElementId() {\r\n            return `ngx-captcha-id-${new Date().valueOf()}`;\r\n        }\r\n        /**\r\n         * @private\r\n         * @param {?} config\r\n         * @param {?} paypal\r\n         * @return {?}\r\n         */\r\n        initPayPal(config, paypal) {\r\n            // Running outside angular zone prevents infinite ngDoCheck lifecycle calls\r\n            this.ngZone.runOutsideAngular((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                // https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page\r\n                /** @type {?} */\r\n                const createOrder = (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    return this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.createOrderOnClient && config.createOrderOnServer) {\r\n                            throw Error(`Both 'createOrderOnClient' and 'createOrderOnServer' are defined.\r\n                    Please choose one or the other.`);\r\n                        }\r\n                        if (!config.createOrderOnClient && !config.createOrderOnServer) {\r\n                            throw Error(`Neither 'createOrderOnClient' or 'createOrderOnServer' are defined.\r\n                    Please define one of these to create order.`);\r\n                        }\r\n                        if (config.createOrderOnClient) {\r\n                            return actions.order.create(config.createOrderOnClient(data));\r\n                        }\r\n                        if (config.createOrderOnServer) {\r\n                            return config.createOrderOnServer(data);\r\n                        }\r\n                        throw Error(`Invalid state for 'createOrder'.`);\r\n                    }));\r\n                });\r\n                /** @type {?} */\r\n                const createSubscription = (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    return this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.createSubscription) {\r\n                            return config.createSubscription(data, actions);\r\n                        }\r\n                    }));\r\n                });\r\n                /** @type {?} */\r\n                const onShippingChange = (/**\r\n                 * @param {?} data\r\n                 * @param {?} actions\r\n                 * @return {?}\r\n                 */\r\n                (data, actions) => {\r\n                    return this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    () => {\r\n                        if (config.onShippingChange) {\r\n                            return config.onShippingChange(data, actions);\r\n                        }\r\n                    }));\r\n                });\r\n                /** @type {?} */\r\n                const buttonsConfig = Object.assign(Object.assign(Object.assign({ style: config.style, onApprove: (/**\r\n                     * @param {?} data\r\n                     * @param {?} actions\r\n                     * @return {?}\r\n                     */\r\n                    (data, actions) => {\r\n                        return this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onApprove) {\r\n                                config.onApprove(data, actions);\r\n                            }\r\n                            // capture on server\r\n                            if (config.authorizeOnServer) {\r\n                                return config.authorizeOnServer(data, actions);\r\n                            }\r\n                            // capture on client\r\n                            /** @type {?} */\r\n                            const onClientAuthorization = config.onClientAuthorization;\r\n                            if (onClientAuthorization) {\r\n                                actions.order.capture().then((/**\r\n                                 * @param {?} details\r\n                                 * @return {?}\r\n                                 */\r\n                                (details) => {\r\n                                    this.ngZone.run((/**\r\n                                     * @return {?}\r\n                                     */\r\n                                    () => {\r\n                                        onClientAuthorization(details);\r\n                                    }));\r\n                                }));\r\n                                return;\r\n                            }\r\n                        }));\r\n                    }), onError: (/**\r\n                     * @param {?} error\r\n                     * @return {?}\r\n                     */\r\n                    (error) => {\r\n                        this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onError) {\r\n                                config.onError(error);\r\n                            }\r\n                        }));\r\n                    }), onCancel: (/**\r\n                     * @param {?} data\r\n                     * @param {?} actions\r\n                     * @return {?}\r\n                     */\r\n                    (data, actions) => {\r\n                        this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onCancel) {\r\n                                config.onCancel(data, actions);\r\n                            }\r\n                        }));\r\n                    }), onClick: (/**\r\n                     * @param {?} data\r\n                     * @param {?} actions\r\n                     * @return {?}\r\n                     */\r\n                    (data, actions) => {\r\n                        this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onClick) {\r\n                                config.onClick(data, actions);\r\n                            }\r\n                        }));\r\n                    }), onInit: (/**\r\n                     * @param {?} data\r\n                     * @param {?} actions\r\n                     * @return {?}\r\n                     */\r\n                    (data, actions) => {\r\n                        this.ngZone.run((/**\r\n                         * @return {?}\r\n                         */\r\n                        () => {\r\n                            if (config.onInit) {\r\n                                config.onInit(data, actions);\r\n                            }\r\n                        }));\r\n                    }) }, ((config.createOrderOnClient || config.createOrderOnServer) && { createOrder })), (config.createSubscription && { createSubscription })), (config.onShippingChange && { onShippingChange }));\r\n                paypal.Buttons(buttonsConfig).render(`#${this.payPalButtonContainerId}`);\r\n            }));\r\n        }\r\n    }\nNgxPaypalComponent.ɵfac = function NgxPaypalComponent_Factory(t) { return new (t || NgxPaypalComponent)(ɵngcc0.ɵɵdirectiveInject(PayPalScriptService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nNgxPaypalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgxPaypalComponent, selectors: [[\"ngx-paypal\"]], viewQuery: function NgxPaypalComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.payPalButtonContainer = _t.first);\n    } }, inputs: { registerScript: \"registerScript\", config: \"config\" }, outputs: { scriptLoaded: \"scriptLoaded\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 1, consts: [[3, \"id\"], [\"payPalButtonContainer\", \"\"]], template: function NgxPaypalComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.payPalButtonContainerId);\n    } }, encapsulation: 2, changeDetection: 0 });\r\n    /** @nocollapse */\r\n    NgxPaypalComponent.ctorParameters = () => [\r\n        { type: PayPalScriptService },\r\n        { type: ChangeDetectorRef },\r\n        { type: NgZone }\r\n    ];\r\n    NgxPaypalComponent.propDecorators = {\r\n        config: [{ type: Input }],\r\n        registerScript: [{ type: Input }],\r\n        scriptLoaded: [{ type: Output }],\r\n        payPalButtonContainer: [{ type: ViewChild, args: ['payPalButtonContainer', { static: false },] }]\r\n    };\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxPaypalComponent, [{\n        type: Component,\n        args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'ngx-paypal',\n                template: `\r\n    <div #payPalButtonContainer [id]=\"payPalButtonContainerId\"></div>\r\n    `\n            }]\n    }], function () { return [{ type: PayPalScriptService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }]; }, { registerScript: [{\n            type: Input\n        }], scriptLoaded: [{\n            type: Output\n        }], payPalButtonContainer: [{\n            type: ViewChild,\n            args: ['payPalButtonContainer', { static: false }]\n        }], config: [{\n            type: Input\n        }] }); })();\r\n    return NgxPaypalComponent;\r\n})();\r\nif (false) {\r\n    /**\r\n     * Configuration for paypal.\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.config;\r\n    /**\r\n     * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n     * sharing base configuration. In such a case only a single component may register script.\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.registerScript;\r\n    /**\r\n     * Emitted when paypal script is loaded\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.scriptLoaded;\r\n    /**\r\n     * Id of the element where PayPal button will be rendered\r\n     * @type {?}\r\n     */\r\n    NgxPaypalComponent.prototype.payPalButtonContainerId;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.ngUnsubscribe;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.payPalButtonContainerElem;\r\n    /**\r\n     * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.initializePayPal;\r\n    /**\r\n     * Reference to PayPal global API\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.payPal;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.paypalScriptService;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.cdr;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxPaypalComponent.prototype.ngZone;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/ngx-paypal.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nlet NgxPayPalModule = /** @class */ (() => {\r\n    class NgxPayPalModule {\r\n    }\nNgxPayPalModule.ɵfac = function NgxPayPalModule_Factory(t) { return new (t || NgxPayPalModule)(); };\nNgxPayPalModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxPayPalModule });\nNgxPayPalModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        ScriptService,\n        PayPalScriptService\n    ], imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxPayPalModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    NgxPaypalComponent,\n                ],\n                exports: [\n                    NgxPaypalComponent,\n                ],\n                providers: [\n                    ScriptService,\n                    PayPalScriptService\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxPayPalModule, { declarations: function () { return [NgxPaypalComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxPaypalComponent]; } }); })();\r\n    return NgxPayPalModule;\r\n})();\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/paypal-models.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction IPayPalConfig() { }\r\nif (false) {\r\n    /**\r\n     * Currency - Defaults to USD if not provided\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.currency;\r\n    /**\r\n     * Use when creating order on client\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.createOrderOnClient;\r\n    /**\r\n     * Use for creating orders on server. PayPal expects you to return 'orderId' in this method\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.createOrderOnServer;\r\n    /**\r\n     * Advanced configuration\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.advanced;\r\n    /**\r\n     * Client id\r\n     * @type {?}\r\n     */\r\n    IPayPalConfig.prototype.clientId;\r\n    /**\r\n     * Shipping callback\r\n     * see https://developer.paypal.com/docs/checkout/integration-features/shipping-callback/\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onShippingChange;\r\n    /**\r\n     * Called when 'onApprove' event occurs\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onApprove;\r\n    /**\r\n     * Called when authorization on client succeeds\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onClientAuthorization;\r\n    /**\r\n     * Implement for authorizing on server side\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.authorizeOnServer;\r\n    /**\r\n     * Button style configuration\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.style;\r\n    /**\r\n     * Error handler\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onError;\r\n    /**\r\n     * Click handler\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onClick;\r\n    /**\r\n     * Cancel handler\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onCancel;\r\n    /**\r\n     * Init handler.\r\n     * can be used for validation, see: https://developer.paypal.com/docs/checkout/integration-features/validation/#\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.onInit;\r\n    /**\r\n     * Create subscription handler\r\n     * https://developer.paypal.com/docs/subscriptions/integrate/\r\n     *\r\n     * Note: the vault property in the advanced configuration also has to be set to true\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.createSubscription;\r\n    /**\r\n     * Vault - must be set to true when creating subscriptions\r\n     * @type {?|undefined}\r\n     */\r\n    IPayPalConfig.prototype.vault;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayPalUrlConfig() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPayPalUrlConfig.prototype.clientId;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.currency;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.commit;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.vault;\r\n    /** @type {?|undefined} */\r\n    IPayPalUrlConfig.prototype.extraParams;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOrderDetails() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.create_time;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.update_time;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.id;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.intent;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.payer;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.status;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.links;\r\n    /** @type {?} */\r\n    IOrderDetails.prototype.purchase_units;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IClientAuthorizeCallbackData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IClientAuthorizeCallbackData.prototype.links;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ILinkDescription() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ILinkDescription.prototype.href;\r\n    /** @type {?} */\r\n    ILinkDescription.prototype.rel;\r\n    /** @type {?|undefined} */\r\n    ILinkDescription.prototype.method;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IQueryParam() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IQueryParam.prototype.name;\r\n    /** @type {?} */\r\n    IQueryParam.prototype.value;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnShippingChangeData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnShippingChangeData.prototype.paymentToken;\r\n    /** @type {?} */\r\n    IOnShippingChangeData.prototype.shipping_address;\r\n    /** @type {?|undefined} */\r\n    IOnShippingChangeData.prototype.selected_shipping_method;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnShippingChangeActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnShippingChangeActions.prototype.resolve;\r\n    /** @type {?} */\r\n    IOnShippingChangeActions.prototype.reject;\r\n    /** @type {?} */\r\n    IOnShippingChangeActions.prototype.patch;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IAdvancedConfiguration() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IAdvancedConfiguration.prototype.commit;\r\n    /** @type {?|undefined} */\r\n    IAdvancedConfiguration.prototype.extraQueryParams;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnApproveCallbackData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnApproveCallbackData.prototype.orderID;\r\n    /** @type {?} */\r\n    IOnApproveCallbackData.prototype.payerID;\r\n    /** @type {?} */\r\n    IOnApproveCallbackData.prototype.subscriptionID;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateOrderCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateOrderCallbackActions.prototype.order;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICancelCallbackData() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICancelCallbackData.prototype.orderID;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnApproveCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnApproveCallbackActions.prototype.redirect;\r\n    /** @type {?} */\r\n    IOnApproveCallbackActions.prototype.restart;\r\n    /** @type {?} */\r\n    IOnApproveCallbackActions.prototype.order;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IOnInitCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnInitCallbackActions.prototype.enable;\r\n    /** @type {?} */\r\n    IOnInitCallbackActions.prototype.disable;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateSubscriptionCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateSubscriptionCallbackActions.prototype.subscription;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IInitCallbackData() { }\r\n/**\r\n * @record\r\n */\r\nfunction ICreateSubscriptionCallbackData() { }\r\n/**\r\n * @record\r\n */\r\nfunction IOnClickCallbackActions() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IOnClickCallbackActions.prototype.resolve;\r\n    /** @type {?} */\r\n    IOnClickCallbackActions.prototype.reject;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayPalButtonStyle() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.label;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.size;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.shape;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.color;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.layout;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.tagline;\r\n    /** @type {?|undefined} */\r\n    IPayPalButtonStyle.prototype.height;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateOrderRequest() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateOrderRequest.prototype.intent;\r\n    /** @type {?} */\r\n    ICreateOrderRequest.prototype.purchase_units;\r\n    /** @type {?|undefined} */\r\n    ICreateOrderRequest.prototype.payer;\r\n    /** @type {?|undefined} */\r\n    ICreateOrderRequest.prototype.application_context;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ICreateSubscriptionRequest() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ICreateSubscriptionRequest.prototype.plan_id;\r\n    /** @type {?|undefined} */\r\n    ICreateSubscriptionRequest.prototype.quantity;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayer() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.name;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.email_address;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.payer_id;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.birth_date;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.tax_info;\r\n    /** @type {?|undefined} */\r\n    IPayer.prototype.address;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IApplicationContext() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.brand_name;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.locale;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.landing_page;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.shipping_preference;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.user_action;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.payment_method;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.return_url;\r\n    /** @type {?|undefined} */\r\n    IApplicationContext.prototype.cancel_url;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPaymentMethod() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPaymentMethod.prototype.payer_selected;\r\n    /** @type {?|undefined} */\r\n    IPaymentMethod.prototype.payee_preferred;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPhone() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPhone.prototype.phone_type;\r\n    /** @type {?|undefined} */\r\n    IPhone.prototype.phone_number;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ITaxInfo() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ITaxInfo.prototype.tax_id;\r\n    /** @type {?} */\r\n    ITaxInfo.prototype.tax_id_type;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPhoneNumber() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPhoneNumber.prototype.national_number;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPurchaseUnit() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPurchaseUnit.prototype.amount;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.reference_id;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.payee;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.payment_instruction;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.description;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.custom_id;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.invoice_id;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.soft_descriptor;\r\n    /** @type {?} */\r\n    IPurchaseUnit.prototype.items;\r\n    /** @type {?|undefined} */\r\n    IPurchaseUnit.prototype.shipping;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPayee() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPayee.prototype.email_address;\r\n    /** @type {?|undefined} */\r\n    IPayee.prototype.merchant_id;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPaymentInstructions() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPaymentInstructions.prototype.platform_fees;\r\n    /** @type {?|undefined} */\r\n    IPaymentInstructions.prototype.disbursement_mode;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPlatformFee() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IPlatformFee.prototype.amount;\r\n    /** @type {?|undefined} */\r\n    IPlatformFee.prototype.payee;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ITransactionItem() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ITransactionItem.prototype.name;\r\n    /** @type {?} */\r\n    ITransactionItem.prototype.unit_amount;\r\n    /** @type {?} */\r\n    ITransactionItem.prototype.quantity;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.description;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.sku;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.category;\r\n    /** @type {?|undefined} */\r\n    ITransactionItem.prototype.tax;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ITax() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ITax.prototype.currency_code;\r\n    /** @type {?} */\r\n    ITax.prototype.value;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IUnitAmount() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IUnitAmount.prototype.currency_code;\r\n    /** @type {?} */\r\n    IUnitAmount.prototype.value;\r\n    /** @type {?|undefined} */\r\n    IUnitAmount.prototype.breakdown;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IMoney() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IMoney.prototype.currency_code;\r\n    /** @type {?} */\r\n    IMoney.prototype.value;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IUnitBreakdown() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.item_total;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.shipping;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.handling;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.tax_total;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.insurance;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.shipping_discount;\r\n    /** @type {?|undefined} */\r\n    IUnitBreakdown.prototype.discount;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IPartyName() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.prefix;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.given_name;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.surname;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.middle_name;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.suffix;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.alternate_full_name;\r\n    /** @type {?|undefined} */\r\n    IPartyName.prototype.full_name;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IAddressPortable() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    IAddressPortable.prototype.country_code;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.address_line_1;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.address_line_2;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.admin_area_2;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.admin_area_1;\r\n    /** @type {?|undefined} */\r\n    IAddressPortable.prototype.postal_code;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction IShipping() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    IShipping.prototype.name;\r\n    /** @type {?|undefined} */\r\n    IShipping.prototype.address;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public_api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ngx-paypal.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgxPayPalModule, NgxPaypalComponent, PayPalScriptService, ScriptService as ɵa };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}